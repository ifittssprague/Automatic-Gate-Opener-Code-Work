%IFS looked at on 10/14

clear all
clc

motor_data=csvread('motor_raw_data_nums.csv');
motor_number=motor_data(:,1);
motor_weight=motor_data(:,2); %kg
motor_Kt=motor_data(:,3); %(N*m)/amp
motor_Rm=motor_data(:,4); %ohm
motor_Fi=motor_data(:,6); %(N*m)/rpm
motor_Tf=motor_data(:,7); %N*m

Volt=24; %power supply from house
screw_lead=0.1; %in constant
deltaT=75; %deg C
Cp=420; %J/(kg*C) Cp of Iron (stator)

w=linspace(1,15000,15000); %RPM
gate_movement=linspace(0,90,91); %angles gate will move through as it opens

%calculates the torque required to move to screw at each angle and the
%force
[screw_torque,screw_force]=screw_torque_requirement(gate_movement); %force outputs in lbf and torque in lbf*in


for motor=1:length(motor_number)
    power_output=0;
    Tf=motor_Tf(motor); %Nm
    Kt=motor_Kt(motor); %(N*m)/amp
    Fi=motor_Fi(motor); %(N*m)/rpm
    Rm=motor_Rm(motor); %ohm

    stator_mass=motor_weight(motor)*0.6; %kg  ASSUMING STATOR IS 60% OF MOTOR MASS

    %energy required to heat the stator 75 deg C in Joules
    energy_to_75(motor)=Cp*deltaT*stator_mass; %joules

    %this loop will calculate the load speed curve of the motor and how
    %much power it can produce


    counter=1;
    torque(counter,motor)=0; %lbf*in
    no_load_speed(motor)=motor_rpm(0,Rm,Kt,Tf,Fi); %rpm
    rpm(counter,motor)=no_load_speed(motor);

    %generates the torque speed curves for each motor
    while rpm(counter,motor)>0
        
        %calculates the current going to the motor
        current(counter,motor)=(torque(counter,motor)/Kt)*0.112985; %amps
        
        %calculates the input power given the current and voltage
        power_in(counter)=current(counter,motor)*Volt; %watts
        
        %10/14 torque in Pdis calculation needs to be in N*m
        
        Pdis(counter,motor)=Pdissipation(rpm(counter,motor),torque(counter,motor),Fi,Tf,Rm,Kt);
        
        %calculates power produced by the motor in watts
        power_output(counter)=torque(counter,motor)*rpm(counter,motor)*0.012;  %watts
        
        efficiency_dis(counter,motor)=1/(Pdis(counter,motor)/power_output(counter));
        efficiency(counter,motor)=power_output(counter)/power_in(counter);
        
        %adds to the next iteration
        counter=counter+1;
        
        torque(counter,motor)=torque(counter-1,motor)+0.005;
        rpm(counter,motor)=motor_rpm(torque(counter,motor),Rm,Kt,Tf,Fi); %torque in lbf*in

    end
    
    
%plot(rpm(2:end,1),current(:,1))
%plot(rpm(2:end,1),efficiency_dis(:,1))
    
%finds the max power point and the values for rpm and toruqe at that point
max_power(motor)=max(power_output);
max_power_index=find(power_output==max(power_output),1);
max_power_torque(motor)=torque(max_power_index,motor); %in lbf*in
max_power_rpm(motor)=rpm(max_power_index,motor); %in rpm

%finds the max efficiency
max_efficiency(motor)=max(efficiency(:,motor));
max_efficiency_index=find(efficiency(:,motor)==max(efficiency(:,motor)));
max_efficiency_torque(motor)=torque(max_efficiency_index,motor);
max_efficiecny_rpm(motor)=rpm(max_efficiency_index,motor);

%calculate gear ratio req for each motor assuming it is opperating at max
%power
req_gear_ratio(motor)=screw_torque(1)/max_power_torque(motor);






%calcualtes the heat generated at max toruqe for each motor
for index=1:91

   %finds the current rpm of the motor output shaft given its attached to
   %the required gear ratio at max power
   rpm_motor_gate(index,motor)=motor_rpm(screw_torque(index)/req_gear_ratio(motor),Rm,Kt,Tf,Fi);
   torque_motor_gate(index,motor)=screw_torque(index)/req_gear_ratio(motor);
    
   %finds the power dissipated at this speed and torque
   Pdis(index,motor)=Pdissipation(rpm_motor_gate(index,motor),screw_torque(index)/req_gear_ratio(motor),Fi,Tf,Rm,Kt); %in watts


   %values defined in lead screw design analaysis
   pie_angle=atand(6/12);
   b=(6^2+12^2)^0.5;
   c=(60^2+6^2)^0.5;
   delta=atand(6/60);
   alpha=180-gate_movement(index)-delta-pie_angle;
   %length of the lead screw
   a(index)=(b^2+c^2-2*b*c*cosd(alpha)).^0.5;

   if index-1>0
       delta_a(index,motor)=a(index-1)-a(index);
       
      
       screw_revolutions(index,motor)=delta_a(index,motor)/screw_lead;
       time_elapsed(index,motor)=(screw_revolutions(index,motor)/(rpm_motor_gate(index,motor)/req_gear_ratio(motor)))*60; %seconds
       heat_energy_generated(index,motor)=Pdis(index,motor)*time_elapsed(index,motor);

   end


end

rpm_motor_gate_graph(:,motor)=rpm_motor_gate(:,motor)*req_gear_ratio(motor);
%this calculation is wrong. The max time to open should be for the lowest
%power motor
total_time_to_open(motor)=sum(time_elapsed(:,motor));

%calculates the total heat energy generated by the motor during opperation
total_heat_energy_generated(motor)=sum(heat_energy_generated(:,motor));

%if this number is less than 0 the motor will not overheat while being used
%intermitently 6 times in a row 
excess_heat_energy_generated(motor)=total_heat_energy_generated(motor)*6-energy_to_75(motor);





%}
%plots the rpm of the motor vs screw torque
%{
plot(speed,screw_torque)
xlabel('motor speed (RPM)')
ylabel('Motor torque(N*m)')
title('RPM of the motor vs screw torque')
%}

%plots rpm of the motor vs gate position
%{
figure
plot(gate_movement,rpm)
xlabel('Gate position(deg)')
ylabel('motor speed (RPM)')
title('RPM of the motor vs gate positiom')
%}


%plots the required  torque to move the screw vs gate position 
%{
figure
plot(gate_movement,screw_torque)
ylim([0 7])
xlabel('Gate angle (deg)')
ylabel('Required screw torque (N*m)')
title('Required  torque to move the screw vs gate position')
%}
end


%plots efficiencys
plot(rpm(2:end,1),efficiency(:,1))
xlim([0 max(rpm(:,1))])

plot(torque(2:end,1),efficiency(:,1))





%plots power disipated vs motor rpm
%{
plot(rpm_motor_gate(2:end,1:10),Pdis(2:end,1:10))
xlabel('RPM of the motor output shaft')
ylabel('Power dissipated (Watts)')
title('10 smallest motors')
%}



%plots power disipation vs torque curve for different motors
%{

rpm_graph=0;
Pdis_graph=0;
torque_graph=0;

for motor=1:3

for graph_torque=.1:.01:max(torque(:,motor))
rpm_graph(round(graph_torque*10),motor)=motor_rpm(graph_torque,motor_Rm(motor),motor_Kt(motor),motor_Tf(motor),motor_Fi(motor));
torque_graph(round(graph_torque*10),motor)=graph_torque;
%finds the power dissipated at this speed and torque
Pdis_graph(round(graph_torque*10),motor)=Pdissipation(rpm_graph(round(graph_torque*10),motor),graph_torque,motor_Fi(motor),motor_Tf(motor),motor_Rm(motor),motor_Kt(motor)); %in watts
end
end
plot(rpm_graph,Pdis_graph)
xlim([0 max(max(rpm_graph(:,1:motor)))])
xlabel('RPM of the motor output shaft')
ylabel('Power dissipated (Watts)')
yyaxis right
plot(rpm_graph,torque_graph)
ylabel('Torque lbf*in')
%}

%plot(rpm_motor_gate(:,1:6),torque_motor_gate(:,1:6))
plot(rpm_motor_gate_graph(:,1:6),screw_torque)
legend(string(motor_number(1:6)))
xlabel('RPM of the lead screw')
ylabel('Torque of the screw(lbf*in)')

7;


%plots the continous intermitent torque and continous toruqe 
%{
figure
Tcon=Tcont(deltaT,TPR,Fi,Tf,Rm,Kt,w);
Tintermint=Tint(deltaT,TPR,Fi,Tf,Rm,Kt,w);
T=[Tcon;Tintermint];
plot(w,T)
ylim([0 5])
xlabel('Motor Speed (rpm)')
ylabel('Torque (N*m)')
legend('Continuous operation','Intermittent operation')
title('Continous intermitent torque and continous toruqe')
%}

%continous Torque calculations and unit conversions
%{
((Kt^2)/Rm) %(kg*m^2)/s
(deltaT/TPR) %watts
%converting to N*m*rpm
(deltaT/TPR)*9.549 %N*m*rpm
Tf*w %N*m*rpm
Fl*w^2 %N*m*rpm
(deltaT/TPR)*9.549-Tf*w %N*m*rpm
(deltaT/TPR)*9.549-Tf*w-Fl*w^2 %N*m*rpm
((Kt^2)/Rm)*((deltaT/TPR)*9.549-Tf*w-Fl*w^2) %N*m*rpm*((kg*m^2)/s)
%converting to J^2
((Kt^2)/Rm)*((deltaT/TPR)*9.549-Tf*w-Fl*w^2)*.105 %J^2
(((Kt^2)/Rm)*((deltaT/TPR)*9.549-Tf*w-Fl*w^2)*.105)^(1/2) %J
Fl*w %J
Tf %J
%}

%function plots continous torque curve
function [Tcon]=Tcont(deltaT,TPR,Fi,Tf,Rm,Kt,w)
%inputs must be in SI units! 
Tcon=(((Kt^2)/Rm)*((deltaT/TPR)*9.549-Tf.*w-Fi*w.^2)*.105).^(1/2)-Fi.*w-Tf; %N*m
end

%function plots intermittent torque curve
function [Tcon]=Tint(deltaT,TPR,Fi,Tf,Rm,Kt,w)
%inputs must be in SI units! 
Tcon=(((Kt^2)/Rm)*((3*(deltaT/TPR))*9.549-Tf.*w-Fi*w.^2)*.105).^(1/2)-Fi.*w-Tf; %N*m
end

%finds the power dissipated at the load torque TL and the speed w
%load torque in N*m and speed in rpm
function [Pdis]=Pdissipation(w,TL,Fi,Tf,Rm,Kt)
%1 N*m*rpm=0.10472 W

%results in watts
Pdis=((TL+Fi*w+Tf)^2)*(Rm/(Kt^2))+((Fi*w^2)+Tf*w)*0.10472;
end

%this function finds the required torque to move the screw at a given gate
%angle specified in degrees
function [screw_torque,screw_force]=screw_torque_requirement(gate_angle)
Gate_Torque=960; %lbf*in
screw_dia=0.25; %in
screw_lead=0.1; %in
f=0.2; %coef of friction

%values defined in lead screw design analaysis
pie_angle=atand(6/12);
b=(6^2+12^2)^0.5;
c=(60^2+6^2)^0.5;
delta=atand(6/60);
alpha=180-gate_angle-delta-pie_angle;
a=(b^2+c^2-2*b*c*cosd(alpha)).^0.5;
beta=acosd((a.^2+c^2-b^2)./(2*a*c));

%axial force in the screw at a gate position
screw_force=Gate_Torque./(sind(beta).*a); %lbf

%required torque to move the screw at a given gate position
screw_torque=((screw_force*screw_dia)/2)*((f*pi*screw_dia+screw_lead)/(pi*screw_dia-f*screw_lead)); %lbf*in
end

%this function finds the RPM of the motor at a given TL in lbf*in
function [rpm]=motor_rpm(TL,Rm,Kt,Tf,Fi)
rpm=-(Rm*TL*0.113-Kt*24+Rm*Tf)/(Fi*Rm+Kt^2*0.1047);

% 1 lbf*in*ohm = 0.113 N*m*ohm
% 1 (N^2*m^2)/amp^2 = 0.1047 (N*m*ohm)/rpm
end